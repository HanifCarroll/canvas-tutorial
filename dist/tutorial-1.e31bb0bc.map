{"version":3,"sources":["helpers.js","index.js"],"names":["getRandomColor","letters","split","color","i","Math","round","random","canvas","document","querySelector","c","getContext","width","window","innerWidth","height","innerHeight","xOffset","mouse","x","undefined","y","addEventListener","event","onMouseMove","resizeWindow","makeCircles","Circle","radius","minRadius","xPositive","yPositive","beginPath","arc","PI","fillStyle","fill","checkBoundaries","growCircles","draw","xSpeedSlider","ySpeedSlider","xSpeed","parseInt","value","ySpeed","maxRadius","maxDistance","abs","circles","animate","amount","push","requestAnimationFrame","clearRect","forEach","circle","update"],"mappings":"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","file":"tutorial-1.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export function getRandomColor() {\n  const letters = \"0123456789ABCDEF\".split(\"\");\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.round(Math.random() * 15)];\n  }\n  return color;\n}\n","import { getRandomColor } from \"./helpers\";\n\n// SETUP\nconst canvas = document.querySelector(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\ncanvas.width = window.innerWidth * 0.85;\ncanvas.height = window.innerHeight;\n\nconst xOffset = window.innerWidth - canvas.width;\n\nconst mouse = {\n  x: undefined,\n  y: undefined,\n};\n\nwindow.addEventListener(\"mousemove\", event => onMouseMove(event));\n\nfunction onMouseMove(event) {\n  mouse.x = event.x;\n  mouse.y = event.y;\n}\n\nwindow.addEventListener(\"resize\", resizeWindow);\n\nfunction resizeWindow() {\n  canvas.width = window.innerWidth * 0.85;\n  canvas.height = window.innerHeight;\n  makeCircles(200, 10);\n}\n\nclass Circle {\n  constructor(x, y, radius) {\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = getRandomColor();\n    this.minRadius = radius;\n    this.xPositive = true;\n    this.yPositive = true;\n  }\n\n  draw() {\n    const { x, y, radius, color } = this;\n\n    c.beginPath();\n    c.arc(x, y, radius, 0, Math.PI * 2, false);\n    c.fillStyle = color;\n    c.fill();\n  }\n\n  update() {\n    this.checkBoundaries();\n    this.growCircles();\n    this.draw();\n  }\n\n  checkBoundaries() {\n    const xSpeedSlider = document.querySelector(\"#x-speed\");\n    const ySpeedSlider = document.querySelector(\"#y-speed\");\n    let xSpeed = parseInt(xSpeedSlider.value);\n    let ySpeed = parseInt(ySpeedSlider.value);\n\n    if (this.x + this.radius > canvas.width || this.x - this.radius < 0) {\n      this.xPositive = !this.xPositive;\n    }\n\n    if (this.y + this.radius > canvas.height || this.y - this.radius < 0) {\n      this.yPositive = !this.yPositive;\n    }\n\n    this.xPositive ? (this.x += xSpeed) : (this.x -= xSpeed);\n    this.yPositive ? (this.y += ySpeed) : (this.y -= ySpeed);\n  }\n\n  growCircles() {\n    const maxRadius = 80;\n    const maxDistance = 50;\n\n    if (\n      Math.abs(mouse.x - this.x - xOffset) < maxDistance &&\n      Math.abs(mouse.y - this.y) < maxDistance\n    ) {\n      if (this.radius < maxRadius) {\n        this.radius += 1;\n      }\n    } else if (this.radius > this.minRadius) {\n      this.radius -= 1;\n    }\n  }\n}\n// END SETUP\n\n// MAIN\nlet circles = [];\nmakeCircles(200, 10);\nanimate();\n\nfunction makeCircles(amount, radius) {\n  circles = [];\n\n  for (let i = 0; i < amount; i++) {\n    radius = Math.random() * 15 + 5;\n    const x = Math.random() * (canvas.width - radius * 2) + radius;\n    const y = Math.random() * (canvas.height - radius * 2) + radius;\n\n    circles.push(new Circle(x, y, radius));\n  }\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n\n  circles.forEach(circle => circle.update());\n}\n// END MAIN\n"]}