{"version":3,"sources":["Circle.js","index.js"],"names":["getRandomColor","letters","split","color","i","Math","round","random","canvas","document","querySelector","Circle","c","x","y","radius","minRadius","speed","value","beginPath","arc","PI","fillStyle","fill","checkBoundaries","draw","width","dx","height","dy","getContext","window","innerWidth","innerHeight","mouse","undefined","addEventListener","event","onMouseMove","resizeWindow","makeCircles","circles","amount","push","animate","requestAnimationFrame","clearRect","forEach","circle","update"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,cAAT,GAA0B;AACxB,MAAMC,OAAO,GAAG,mBAAmBC,KAAnB,CAAyB,EAAzB,CAAhB;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,KAAK,IAAIF,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,SAAOJ,KAAP;AACD;;AAED,IAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;IAEqBC;;;AACnB,kBAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqBC,MAArB,EAA6B;AAAA;;AAC3B,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKZ,KAAL,GAAaH,cAAc,EAA3B;AACA,SAAKgB,SAAL,GAAiBD,MAAjB;AACA,SAAKE,KAAL,GAAaR,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCQ,KAA9C;AACD;;;;2BAEM;AAAA,UACGN,CADH,GAC8B,IAD9B,CACGA,CADH;AAAA,UACMC,CADN,GAC8B,IAD9B,CACMA,CADN;AAAA,UACSC,CADT,GAC8B,IAD9B,CACSA,CADT;AAAA,UACYC,MADZ,GAC8B,IAD9B,CACYA,MADZ;AAAA,UACoBZ,KADpB,GAC8B,IAD9B,CACoBA,KADpB;AAELS,MAAAA,CAAC,CAACO,SAAF;AACAP,MAAAA,CAAC,CAACQ,GAAF,CAAMP,CAAN,EAASC,CAAT,EAAYC,MAAZ,EAAoB,CAApB,EAAuBV,IAAI,CAACgB,EAAL,GAAU,CAAjC,EAAoC,KAApC;AACAT,MAAAA,CAAC,CAACU,SAAF,GAAcnB,KAAd;AACAS,MAAAA,CAAC,CAACW,IAAF;AACD;;;6BAEQ;AACP,WAAKC,eAAL,GADO,CAEP;;AACA,WAAKC,IAAL;AACD;;;sCAEiB;AAChB,UAAI,KAAKZ,CAAL,GAAS,KAAKE,MAAd,GAAuBP,MAAM,CAACkB,KAA9B,IAAuC,KAAKb,CAAL,GAAS,KAAKE,MAAd,GAAuB,CAAlE,EAAqE;AACnE,aAAKY,EAAL,GAAU,CAAC,KAAKA,EAAhB;AACD;;AAED,UAAI,KAAKb,CAAL,GAAS,KAAKC,MAAd,GAAuBP,MAAM,CAACoB,MAA9B,IAAwC,KAAKd,CAAL,GAAS,KAAKC,MAAd,GAAuB,CAAnE,EAAsE;AACpE,aAAKc,EAAL,GAAU,CAAC,KAAKA,EAAhB;AACD;;AAED,WAAKhB,CAAL,IAAU,KAAKI,KAAf;AACA,WAAKH,CAAL,IAAU,KAAKG,KAAf;AACD,MAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/DF;;;;AAEA,IAAMT,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,IAAME,CAAC,GAAGJ,MAAM,CAACsB,UAAP,CAAkB,IAAlB,CAAV;AAEAtB,MAAM,CAACkB,KAAP,GAAeK,MAAM,CAACC,UAAP,GAAoB,IAAnC;AACAxB,MAAM,CAACoB,MAAP,GAAgBG,MAAM,CAACE,WAAvB;AAEA,IAAMC,KAAK,GAAG;AACZrB,EAAAA,CAAC,EAAEsB,SADS;AAEZrB,EAAAA,CAAC,EAAEqB;AAFS,CAAd;AAKAJ,MAAM,CAACK,gBAAP,CAAwB,WAAxB,EAAqC,UAAAC,KAAK;AAAA,SAAIC,WAAW,CAACD,KAAD,CAAf;AAAA,CAA1C;;AACA,SAASC,WAAT,CAAqBD,KAArB,EAA4B;AAC1BH,EAAAA,KAAK,CAACrB,CAAN,GAAUwB,KAAK,CAACxB,CAAhB;AACAqB,EAAAA,KAAK,CAACpB,CAAN,GAAUuB,KAAK,CAACvB,CAAhB;AACD;;AAED,SAASyB,YAAT,GAAwB;AACtB/B,EAAAA,MAAM,CAACkB,KAAP,GAAeK,MAAM,CAACC,UAAP,GAAoB,IAAnC;AACAxB,EAAAA,MAAM,CAACoB,MAAP,GAAgBG,MAAM,CAACE,WAAvB;AACAO,EAAAA,WAAW,CAAC,GAAD,EAAM,EAAN,CAAX;AACD;;AAEDT,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCG,YAAlC;AAEA,IAAIE,OAAO,GAAG,EAAd;AACAD,WAAW,CAAC,GAAD,EAAM,EAAN,CAAX;;AACA,SAASA,WAAT,CAAqBE,MAArB,EAA6B3B,MAA7B,EAAqC;AACnC0B,EAAAA,OAAO,GAAG,EAAV;;AAEA,OAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsC,MAApB,EAA4BtC,CAAC,EAA7B,EAAiC;AAC/BW,IAAAA,MAAM,GAAGV,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAA9B;AACA,QAAMM,CAAC,GAAGR,IAAI,CAACE,MAAL,MAAiBC,MAAM,CAACkB,KAAP,GAAeX,MAAM,GAAG,CAAzC,IAA8CA,MAAxD;AACA,QAAMD,CAAC,GAAGT,IAAI,CAACE,MAAL,MAAiBC,MAAM,CAACoB,MAAP,GAAgBb,MAAM,GAAG,CAA1C,IAA+CA,MAAzD;AAEA0B,IAAAA,OAAO,CAACE,IAAR,CAAa,IAAIhC,eAAJ,CAAWC,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,MAApB,CAAb;AACD;AACF;;AAED,SAAS6B,OAAT,GAAmB;AACjBC,EAAAA,qBAAqB,CAACD,OAAD,CAArB;AACAhC,EAAAA,CAAC,CAACkC,SAAF,CAAY,CAAZ,EAAe,CAAf,EAAkBtC,MAAM,CAACkB,KAAzB,EAAgClB,MAAM,CAACoB,MAAvC;AAEAa,EAAAA,OAAO,CAACM,OAAR,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,MAAP,EAAJ;AAAA,GAAtB;AACD;;AAEDL,OAAO","file":"tutorial-1.e31bb0bc.map","sourceRoot":"..","sourcesContent":["function getRandomColor() {\n  const letters = \"0123456789ABCDEF\".split(\"\");\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.round(Math.random() * 15)];\n  }\n  return color;\n}\n\nconst canvas = document.querySelector(\"canvas\");\n\nexport default class Circle {\n  constructor(c, x, y, radius) {\n    this.c = c;\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.color = getRandomColor();\n    this.minRadius = radius;\n    this.speed = document.querySelector(\"#speed\").value;\n  }\n\n  draw() {\n    const { c, x, y, radius, color } = this;\n    c.beginPath();\n    c.arc(x, y, radius, 0, Math.PI * 2, false);\n    c.fillStyle = color;\n    c.fill();\n  }\n\n  update() {\n    this.checkBoundaries();\n    // this.growCircles();\n    this.draw();\n  }\n\n  checkBoundaries() {\n    if (this.x + this.radius > canvas.width || this.x - this.radius < 0) {\n      this.dx = -this.dx;\n    }\n\n    if (this.y + this.radius > canvas.height || this.y - this.radius < 0) {\n      this.dy = -this.dy;\n    }\n\n    this.x += this.speed;\n    this.y += this.speed;\n  }\n\n  // growCircles() {\n  //   const maxRadius = 80;\n  //   const maxDistance = 50;\n\n  //   if (\n  //     Math.abs(mouse.x - this.x) < maxDistance &&\n  //     Math.abs(mouse.y - this.y) < maxDistance\n  //   ) {\n  //     if (this.radius < maxRadius) {\n  //       this.radius += 1;\n  //     }\n  //   } else if (this.radius > this.minRadius) {\n  //     this.radius -= 1;\n  //   }\n  // }\n}\n","import Circle from \"./Circle\";\n\nconst canvas = document.querySelector(\"canvas\");\nconst c = canvas.getContext(\"2d\");\n\ncanvas.width = window.innerWidth * 0.85;\ncanvas.height = window.innerHeight;\n\nconst mouse = {\n  x: undefined,\n  y: undefined,\n};\n\nwindow.addEventListener(\"mousemove\", event => onMouseMove(event));\nfunction onMouseMove(event) {\n  mouse.x = event.x;\n  mouse.y = event.y;\n}\n\nfunction resizeWindow() {\n  canvas.width = window.innerWidth * 0.85;\n  canvas.height = window.innerHeight;\n  makeCircles(200, 10);\n}\n\nwindow.addEventListener(\"resize\", resizeWindow);\n\nlet circles = [];\nmakeCircles(200, 10);\nfunction makeCircles(amount, radius) {\n  circles = [];\n\n  for (let i = 0; i < amount; i++) {\n    radius = Math.random() * 15 + 5;\n    const x = Math.random() * (canvas.width - radius * 2) + radius;\n    const y = Math.random() * (canvas.height - radius * 2) + radius;\n\n    circles.push(new Circle(c, x, y, radius));\n  }\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n\n  circles.forEach(circle => circle.update());\n}\n\nanimate();\n"]}